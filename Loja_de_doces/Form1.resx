<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAA9RJREFUeF7t
        3T+IHGUYx/G9CxJJRPHkuLudfd93ZlYRERLSBBKsBEHEFDYWKYKFoIUJiiKRELAxVTrBIlVIIKQJxEaw
        0Ea0sTCQ1lQighAIF0kjRn/v7HMhd/fu3ljus98P/Jrs8wae+T9zO+8OAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAALb21t7WAT0kfKd21MvzYx3W5DutqE8JqVwKtxjMe10n8fp/rfUpoYb6yurj5l5VM1
        VXWojvGTNsYv5j3aET5rQ3jFWvOrrqrDWvl/lVb841HNtyrfNxm1y7KOFl+q5mFp7DxHPd3c2Ng4YH26
        s6RD/c+lxktpQ/2ejdtmHNK5Ur2XaOO+Yq36kg/9pYanRtcFNvSRlZWVp7WX3C/WO0k+sqX19JK17Ie2
        7LOlhmdlNBqt2PBOm9IbpTpv0bL60Fr2Qxc7F0vNzkpbVS/Y8I4WzDulOm/JF4bWsh9q6tNSs9OSD4Ux
        xmdteCeN0uulWm/RsjpjLfvRjEZHS81OSxvrX2zoI/n5gTaMe6V6L1F//+w88rmhQ/iPpaZLyYd7G7ZN
        k9LHpXovUd+XrFV/8tWtru733IO1F3yt8uXJqF2W8jlSNX+Xxs5xHmrlX3l+MNhvffqUhumIVt6dwgLo
        zvvaQC6nlJ608ql0fdBqgb2fn6LNe3SLfLqu6sPW2kLY38T4rlb4TeWW9uiflK+0cRyzzwEAAAB4tJyf
        DtYhvN2EcGI8HAb7dzi3pFvAD9pY/7HzGYBuBb/PzwmsDg4ta0Vff3zF74w+f6AN5E2rL0prqVbNNdXe
        1Zi5/2aQ+thUP9+k5Hzj1x5+vrQAdkYL5H4IYWzDtqmH9Yv6/M/SuHlPm9KDtoqvWqu+DIfD57Ti9vw+
        4Fbyc3Ebuo3+jx9K9V6i/n5Tm/7+HqCLvVOlhqdFC2JTw56YjJ7QUeHlUq23tKP0lrXshw7/F0rNzkq9
        vp5seEcL5mSpzluakD63lv1gA+gflxsAp4D+cXkK4CKwX/JFoNsvhXAbODvdbWB0ehtoeBBUiPrYHC/C
        gyDDo2B0+GMQAAAAsEh4MWRR9Xo1bLBYr4bV3athlf9Xw3g5dGa6l0PVn9+XQ9Ugr4fvEfXt8/VwJojo
        F/Xnc4IIHbb//xQxzzBFjBtqikmieiZf41jLfmjlMU1cz2hZ+Zsmjoki+yWf+lJyOFGkMFVsj2jv9zlV
        bMZk0bOjnlxPFt1huvjdyU8DF2K6+C1bPxgxTpMfjMjne+3V/GAEAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAGCxDQb/AZ2kXv4DsRqeAAAAAElFTkSuQmCC
</value>
  </data>
</root>